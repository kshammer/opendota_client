/*
 * OpenDota API
 *
 * # Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  You can find data that can be used to convert hero and ability IDs and other information provided by the API from the [dotaconstants](https://github.com/odota/dotaconstants) repository.  **Beginning 2018-04-22, the OpenDota API is limited to 50,000 free calls per month and 60 requests/minute** We offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more. 
 *
 * The version of the OpenAPI document: 18.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct InlineResponse20037 {
    /// The scenario's name or description
    #[serde(rename = "scenario", skip_serializing_if = "Option::is_none")]
    pub scenario: Option<String>,
    /// Boolean indicating whether Radiant executed this scenario
    #[serde(rename = "is_radiant", skip_serializing_if = "Option::is_none")]
    pub is_radiant: Option<bool>,
    /// Region the game was played in
    #[serde(rename = "region", skip_serializing_if = "Option::is_none")]
    pub region: Option<i32>,
    /// The number of games where this scenario occurred
    #[serde(rename = "games", skip_serializing_if = "Option::is_none")]
    pub games: Option<String>,
    /// The number of games won where this scenario occured
    #[serde(rename = "wins", skip_serializing_if = "Option::is_none")]
    pub wins: Option<String>,
}

impl InlineResponse20037 {
    pub fn new() -> InlineResponse20037 {
        InlineResponse20037 {
            scenario: None,
            is_radiant: None,
            region: None,
            games: None,
            wins: None,
        }
    }
}


