/*
 * OpenDota API
 *
 * # Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  You can find data that can be used to convert hero and ability IDs and other information provided by the API from the [dotaconstants](https://github.com/odota/dotaconstants) repository.  **Beginning 2018-04-22, the OpenDota API is limited to 50,000 free calls per month and 60 requests/minute** We offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more. 
 *
 * The version of the OpenAPI document: 18.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct LeagueTeamsResponse {
    /// Team's identifier
    #[serde(rename = "team_id", skip_serializing_if = "Option::is_none")]
    pub team_id: Option<i32>,
    /// The Elo rating of the team
    #[serde(rename = "rating", skip_serializing_if = "Option::is_none")]
    pub rating: Option<f32>,
    /// The number of games won by this team
    #[serde(rename = "wins", skip_serializing_if = "Option::is_none")]
    pub wins: Option<i32>,
    /// The number of losses by this team
    #[serde(rename = "losses", skip_serializing_if = "Option::is_none")]
    pub losses: Option<i32>,
    /// The Unix timestamp of the last match played by this team
    #[serde(rename = "last_match_time", skip_serializing_if = "Option::is_none")]
    pub last_match_time: Option<i32>,
    /// Team name, eg. 'Newbee'
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The team tag/abbreviation
    #[serde(rename = "tag", skip_serializing_if = "Option::is_none")]
    pub tag: Option<String>,
}

impl LeagueTeamsResponse {
    pub fn new() -> LeagueTeamsResponse {
        LeagueTeamsResponse {
            team_id: None,
            rating: None,
            wins: None,
            losses: None,
            last_match_time: None,
            name: None,
            tag: None,
        }
    }
}


